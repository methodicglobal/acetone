name: Build, Test & Release (.NET Framework 4.8.1)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: write
  actions: read
  packages: write

jobs:
  build_and_test:
    runs-on: windows-latest
    env:
      SOLUTION_FILE: Methodic.Acetone.CoreOnly.sln
      BUILD_CONFIGURATION: Release
      TEST_PROJECT: Methodic.Acetone.Tests/Methodic.Acetone.Tests.csproj
      ARTIFACT_NAME: acetone-net481
      ARTIFACT_ZIP: acetone-net481.zip
      PACKAGE_FRAMEWORK: net481

    steps:
      - name: Checkout (with tags)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
          dotnet-quality: preview

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v2

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: |
            ~\AppData\Local\NuGet\Cache
            ~\.nuget\packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.sln', '**/*.csproj', '**/packages.config') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore
        run: dotnet restore "$env:SOLUTION_FILE"

      - name: Build
        run: dotnet build "$env:SOLUTION_FILE" -c $env:BUILD_CONFIGURATION --no-restore

      - name: Run unit tests
        shell: pwsh
        run: |
          $testResultsDir = Join-Path $env:RUNNER_TEMP "TestResults"
          New-Item -ItemType Directory -Force -Path $testResultsDir | Out-Null

          dotnet test $env:TEST_PROJECT -c $env:BUILD_CONFIGURATION -p:Platform=x64 --no-build --logger "trx;LogFileName=Methodic.Acetone.Tests.trx" --results-directory "$testResultsDir"

          $exitCode = $LASTEXITCODE
          if (-not (Get-ChildItem -Path $testResultsDir -Filter *.trx -ErrorAction SilentlyContinue)) {
            Write-Warning "No TRX test result files were produced."
          }

          "TEST_RESULTS_DIR=$testResultsDir" | Out-File -FilePath $env:GITHUB_ENV -Append

          if ($exitCode -ne 0) {
            exit $exitCode
          }

      - name: Upload test results
        if: always() && hashFiles(format('{0}/TestResults/*.trx', runner.temp)) != ''
        uses: actions/upload-artifact@v4
        with:
          name: test-results-trx
          path: ${{ runner.temp }}/TestResults/*.trx
          retention-days: 14

      - name: Package build output (binary)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        shell: pwsh
        run: |
          $configRoot = Join-Path ".\Methodic.Acetone\bin" $env:BUILD_CONFIGURATION
          if (-not (Test-Path $configRoot)) {
            Write-Error "Expected build configuration path not found: $configRoot"
            exit 1
          }

          $candidate = Get-ChildItem -Path $configRoot -Directory | Where-Object {
            Test-Path (Join-Path $_.FullName "Methodic.Acetone.dll")
          } | Select-Object -First 1

          if ($candidate) {
            $acetoneOutput = $candidate.FullName
          }
          elseif (Test-Path (Join-Path $configRoot "Methodic.Acetone.dll")) {
            $acetoneOutput = $configRoot
          }
          else {
            Write-Error "Expected Methodic.Acetone build output not found under $configRoot"
            Get-ChildItem -Path $configRoot -Recurse -Filter "Methodic.Acetone.dll" | ForEach-Object { Write-Host "Found candidate: $($_.FullName)" }
            exit 1
          }

          $out = Join-Path $env:RUNNER_TEMP $env:ARTIFACT_NAME
          New-Item -Force -ItemType Directory -Path $out | Out-Null
          Copy-Item -Recurse -Force "$acetoneOutput\*" $out

          Compress-Archive -Path "$out\*" -DestinationPath "$env:ARTIFACT_ZIP" -Force
          Write-Host "Created archive: $env:ARTIFACT_ZIP"

      - name: Create NuGet package (.nuspec)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        shell: pwsh
        run: |
          $version = (git describe --tags --abbrev=0 2>$null) -replace '^v',''
          if (-not $version) { $version = "0.1.0" }
          $semantic = "$version"
          Write-Host "Packing version $semantic"
          nuget pack Methodic.Acetone.nuspec -Version $semantic -OutputDirectory "$env:RUNNER_TEMP" -Properties "Configuration=$env:BUILD_CONFIGURATION"
          if ($LASTEXITCODE -ne 0) { Write-Error "nuget pack failed"; exit 1 }
          Get-ChildItem "$env:RUNNER_TEMP" -Filter "Methodic.Acetone.*.nupkg" | ForEach-Object { Write-Host "Created package: $_" }

      - name: Upload release artifacts
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: |
            ${{ env.ARTIFACT_ZIP }}
            ${{ runner.temp }}/Methodic.Acetone.*.nupkg
          retention-days: 14

  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build_and_test
    runs-on: windows-latest
    env:
      ARTIFACT_NAME: acetone-net481
      ARTIFACT_ZIP: acetone-net481.zip

    steps:
      - name: Checkout (with tags)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download release artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: release

      - name: Compute next integer tag (vN)
        id: nexttag
        shell: pwsh
        run: |
          git fetch --tags --force
          $tags = (git tag --list "v*" | Where-Object { $_ -match '^v\d+$' }) | ForEach-Object { $_.Trim() }
          if (-not $tags -or $tags.Count -eq 0) { $next = 1 } else { $max = ($tags | ForEach-Object { [int]($_ -replace '^v','') } | Measure-Object -Maximum).Maximum; $next = [int]$max + 1 }
          "next=v$next" | Out-File -FilePath $env:GITHUB_OUTPUT -Append

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.nexttag.outputs.next }}
          name: Release ${{ steps.nexttag.outputs.next }}
          body: |
            Automated build from commit ${{ github.sha }} on branch ${{ github.ref_name }}.

            This release includes:
            - Methodic.Acetone binaries (.NET Framework 4.8.1)
            - NuGet package
            - Unit test results (see artifacts)
          files: |
            release/${{ env.ARTIFACT_ZIP }}
            release/Methodic.Acetone.*.nupkg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
